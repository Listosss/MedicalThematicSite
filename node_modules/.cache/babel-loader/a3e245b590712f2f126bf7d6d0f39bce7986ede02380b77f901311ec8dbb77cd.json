{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0434\\u043C\\u0438\\u043D\\\\Documents\\\\Svarchik\\\\\\u0422\\u041F\\u041F\\\\kurs\\\\portal\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const loadUserFromStorage = () => {\n    try {\n      const userData = localStorage.getItem(\"currentUser\");\n      return userData ? JSON.parse(userData) : null;\n    } catch (error) {\n      console.error(\"Error loading user from localStorage:\", error);\n      return null;\n    }\n  };\n  useEffect(() => {\n    const loadedUser = loadUserFromStorage();\n    if (loadedUser) setUser(loadedUser);\n  }, []);\n  const login = (username, pass) => {\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\n    if (users.length === 0) {\n      alert(\"No registered users found. Please check your username or password.\");\n      return;\n    }\n    const thisUser = users.find(user => String(user.password) === String(pass) && user.name === username);\n    if (thisUser) {\n      setUser(thisUser);\n      localStorage.setItem(\"currentUser\", JSON.stringify(thisUser));\n      navigate('/account');\n      alert(\"Welcome, \" + username + \"!\");\n    } else alert(\"Invalid username or password. Please try again.\");\n  };\n  const checkNameUniqueness = username => {\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\n    return !users.some(user => user.name === username);\n  };\n  const register = data => {\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\n    users.push(data);\n    localStorage.setItem(\"users\", JSON.stringify(users));\n    navigate('/login');\n  };\n  const logout = () => {\n    const users = JSON.parse(localStorage.getItem(\"users\"));\n    setUser(null);\n    localStorage.removeItem(\"currentUser\");\n    navigate(\"/\");\n  };\n  const updateUser = updatedFields => {\n    const updatedUser = {\n      ...user,\n      ...updatedFields\n    };\n    setUser(updatedUser);\n    localStorage.setItem(\"currentUser\", JSON.stringify(updatedUser));\n  };\n  const saveArticle = ({\n    uid,\n    title\n  }) => {\n    if (!user) return;\n    const updatedFields = {\n      savedArticles: [...(user.savedArticles || []), {\n        uid,\n        title\n      }]\n    };\n    updateUser(updatedFields);\n  };\n  const deleteSavedArticle = ({\n    uid\n  }) => {\n    if (!user) return;\n    const updatedFields = {\n      savedArticles: user.savedArticles.filter(article => String(article.uid) !== String(uid))\n    };\n    updateUser(updatedFields);\n  };\n  const rateArticle = (uid, rating) => {\n    var _user$ratedArticles;\n    if (!user) return;\n    const ratedArticles = (user === null || user === void 0 ? void 0 : (_user$ratedArticles = user.ratedArticles) === null || _user$ratedArticles === void 0 ? void 0 : _user$ratedArticles.filter(article => article.uid !== uid)) || [];\n    ratedArticles.push({\n      uid,\n      rating\n    });\n    updateUser({\n      ratedArticles\n    });\n  };\n  const updateAvatar = newAvatar => {\n    if (!user) return;\n    const avatar = newAvatar;\n    updateUser({\n      avatar\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      register,\n      checkNameUniqueness,\n      saveArticle,\n      deleteSavedArticle,\n      updateAvatar,\n      rateArticle\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","navigate","loadUserFromStorage","userData","localStorage","getItem","JSON","parse","error","console","loadedUser","login","username","pass","users","length","alert","thisUser","find","String","password","name","setItem","stringify","checkNameUniqueness","some","register","data","push","logout","removeItem","updateUser","updatedFields","updatedUser","saveArticle","uid","title","savedArticles","deleteSavedArticle","filter","article","rateArticle","rating","_user$ratedArticles","ratedArticles","updateAvatar","newAvatar","avatar","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Админ/Documents/Svarchik/ТПП/kurs/portal/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nexport const AuthContext = createContext();\r\n\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const loadUserFromStorage = () => {\r\n    try {\r\n      const userData = localStorage.getItem(\"currentUser\");\r\n      return userData ? JSON.parse(userData) : null;\r\n    } catch (error) {\r\n      console.error(\"Error loading user from localStorage:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadedUser = loadUserFromStorage();\r\n    if (loadedUser) setUser(loadedUser)\r\n  }, [])\r\n\r\n  const login = (username, pass) => {\r\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n\r\n    if (users.length === 0) {\r\n      alert(\"No registered users found. Please check your username or password.\")\r\n      return;\r\n    }\r\n    const thisUser = users.find(user => String(user.password) === String(pass) && user.name === username)\r\n    if (thisUser) {\r\n      setUser(thisUser);\r\n      localStorage.setItem(\"currentUser\", JSON.stringify(thisUser));\r\n      navigate('/account');\r\n      alert(\"Welcome, \" + username + \"!\");\r\n    }\r\n    else\r\n      alert(\"Invalid username or password. Please try again.\")\r\n  }\r\n\r\n  const checkNameUniqueness = (username) => {\r\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n    return !users.some(user => user.name === username);\r\n  }\r\n\r\n  const register = (data) => {\r\n    const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n    users.push(data)\r\n\r\n    localStorage.setItem(\"users\", JSON.stringify(users));\r\n    navigate('/login');\r\n  };\r\n\r\n  const logout = () => {\r\n    const users = JSON.parse(localStorage.getItem(\"users\"));\r\n\r\n    setUser(null);\r\n    localStorage.removeItem(\"currentUser\");\r\n    navigate(\"/\")\r\n  };\r\n\r\n\r\n  const updateUser = (updatedFields) => {\r\n    const updatedUser = { ...user, ...updatedFields }\r\n    setUser(updatedUser);\r\n    localStorage.setItem(\"currentUser\", JSON.stringify(updatedUser));\r\n  }\r\n\r\n  const saveArticle = ({ uid, title }) => {\r\n    if (!user) return\r\n\r\n    const updatedFields = { savedArticles: [...(user.savedArticles || []), { uid, title }] }\r\n    updateUser(updatedFields)\r\n  }\r\n\r\n  const deleteSavedArticle = ({ uid }) => {\r\n    if (!user) return;\r\n\r\n    const updatedFields ={savedArticles: user.savedArticles.filter(article => String(article.uid) !== String(uid))}\r\n    updateUser(updatedFields)\r\n  }\r\n\r\n  const rateArticle = (uid, rating) => {\r\n    if (!user) return;\r\n    const ratedArticles = user?.ratedArticles?.filter(article => article.uid !== uid) || [];\r\n    ratedArticles.push({ uid, rating })\r\n    updateUser({ratedArticles})\r\n  }\r\n\r\n  const updateAvatar = (newAvatar) => {\r\n    if (!user) return;\r\n\r\n    const avatar = newAvatar;\r\n    updateUser({avatar})\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      user,\r\n      login, logout, register,\r\n      checkNameUniqueness, saveArticle, deleteSavedArticle,\r\n      updateAvatar, rateArticle\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}