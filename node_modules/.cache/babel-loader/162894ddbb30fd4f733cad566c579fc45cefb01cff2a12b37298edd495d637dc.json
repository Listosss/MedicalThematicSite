{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0434\\u043C\\u0438\\u043D\\\\Documents\\\\Svarchik\\\\\\u0422\\u041F\\u041F\\\\kurs\\\\portal\\\\frontend\\\\src\\\\contetxt\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, Children } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  /*useEffect(() => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        setAuthToken(token);\r\n        fetch('/api/user', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n          },\r\n        })\r\n          .then(response => {\r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch user data');\r\n            }\r\n            return response.json();\r\n          })\r\n          .then(data => setUser(data))\r\n          .catch(() => logout());\r\n      }\r\n    }, []);\r\n    \r\n    const login = async (username, password) => {\r\n      const response = await fetch('/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Login failed');\r\n      }\r\n      const data = await response.json();\r\n      localStorage.setItem('token', data.token);\r\n      setAuthToken(data.token);\r\n      setUser(data.user);\r\n    };\r\n    \r\n    const logout = () => {\r\n      localStorage.removeItem('token');\r\n      setAuthToken(null);\r\n      setUser(null);\r\n    };*/\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: user,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","Children","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Админ/Documents/Svarchik/ТПП/kurs/portal/frontend/src/contetxt/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, Children } from 'react';\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({children}) =>{\r\n    const [user, setUser] = useState(null);\r\n    /*useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          setAuthToken(token);\r\n          fetch('/api/user', {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`,\r\n            },\r\n          })\r\n            .then(response => {\r\n              if (!response.ok) {\r\n                throw new Error('Failed to fetch user data');\r\n              }\r\n              return response.json();\r\n            })\r\n            .then(data => setUser(data))\r\n            .catch(() => logout());\r\n        }\r\n      }, []);\r\n      \r\n      const login = async (username, password) => {\r\n        const response = await fetch('/api/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ username, password }),\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Login failed');\r\n        }\r\n        const data = await response.json();\r\n        localStorage.setItem('token', data.token);\r\n        setAuthToken(data.token);\r\n        setUser(data.user);\r\n      };\r\n      \r\n      const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setAuthToken(null);\r\n        setUser(null);\r\n      };*/\r\n    return(\r\n        <AuthContext.Provider value={user}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5E,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAI;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,oBACII,OAAA,CAACC,WAAW,CAACM,QAAQ;IAACC,KAAK,EAAEH,IAAK;IAAAF,QAAA,EAC7BA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAR,EAAA,CAjDYF,YAAY;AAAAW,EAAA,GAAZX,YAAY;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}