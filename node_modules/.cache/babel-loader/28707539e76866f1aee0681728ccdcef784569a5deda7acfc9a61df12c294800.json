{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0434\\u043C\\u0438\\u043D\\\\Documents\\\\Svarchik\\\\\\u0422\\u041F\\u041F\\\\kurs\\\\portal\\\\frontend\\\\src\\\\pages\\\\ArticlePage\\\\ArticlePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './ArticlePage.css';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ArticlePage() {\n  _s();\n  var _data$terms;\n  const {\n    uid\n  } = useParams();\n  const [data, setData] = useState(null);\n  const getAllInfo = async () => {\n    try {\n      var _xmlDoc$querySelector, _xmlDoc$querySelector2, _xmlDoc$querySelector3;\n      const response = await fetch(`https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pubmed&id=${uid}&retmode=xml`);\n      const xmlText = await response.text();\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(xmlText, \"application/xml\");\n      const meshTerms = Array.from(xmlDoc.querySelectorAll(\"MeshHeading > DescriptorName\")).map(term => term.textContent) || \"No MeSH terms found\";\n      const title = ((_xmlDoc$querySelector = xmlDoc.querySelector(\"ArticleTitle\")) === null || _xmlDoc$querySelector === void 0 ? void 0 : _xmlDoc$querySelector.textContent) || \"No title found\";\n      const abstract = ((_xmlDoc$querySelector2 = xmlDoc.querySelector(\"AbstractText\")) === null || _xmlDoc$querySelector2 === void 0 ? void 0 : _xmlDoc$querySelector2.textContent) || \"No abstract available\";\n      const authors = Array.from(xmlDoc.querySelectorAll(\"Author > LastName\")).map(author => author.textContent).join(\", \") || \"No authors found\";\n      const pubDate = ((_xmlDoc$querySelector3 = xmlDoc.querySelector(\"PubDate > Year\")) === null || _xmlDoc$querySelector3 === void 0 ? void 0 : _xmlDoc$querySelector3.textContent) || \"No publication date found\";\n      setData({\n        title: title,\n        abstract: abstract,\n        authors: authors,\n        pubdt: pubDate,\n        terms: [meshTerms.slice(0, 5)]\n      });\n    } catch (error) {\n      console.log('Failed to fetch article: ', error);\n    }\n  };\n  useEffect(() => {\n    getAllInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"article_title\",\n      children: data === null || data === void 0 ? void 0 : data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categories_div\",\n      children: data === null || data === void 0 ? void 0 : (_data$terms = data.terms) === null || _data$terms === void 0 ? void 0 : _data$terms.map((category, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"article_category\",\n        children: category\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 74\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data === null || data === void 0 ? void 0 : data.pubdt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"article_text\",\n      children: data === null || data === void 0 ? void 0 : data.abstract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ArticlePage, \"2S9BOs/bAHx3HCGd/AJttP69SIM=\", false, function () {\n  return [useParams];\n});\n_c = ArticlePage;\nvar _c;\n$RefreshReg$(_c, \"ArticlePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","ArticlePage","_s","_data$terms","uid","data","setData","getAllInfo","_xmlDoc$querySelector","_xmlDoc$querySelector2","_xmlDoc$querySelector3","response","fetch","xmlText","text","parser","DOMParser","xmlDoc","parseFromString","meshTerms","Array","from","querySelectorAll","map","term","textContent","title","querySelector","abstract","authors","author","join","pubDate","pubdt","terms","slice","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","category","i","_c","$RefreshReg$"],"sources":["C:/Users/Админ/Documents/Svarchik/ТПП/kurs/portal/frontend/src/pages/ArticlePage/ArticlePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './ArticlePage.css'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport function ArticlePage() {\r\n  const { uid } = useParams();\r\n  const [data, setData] = useState(null)\r\n\r\n  const getAllInfo = async () => {\r\n    try {\r\n      const response = await fetch(`https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pubmed&id=${uid}&retmode=xml`)\r\n      const xmlText = await response.text();\r\n      const parser = new DOMParser();\r\n      const xmlDoc = parser.parseFromString(xmlText, \"application/xml\");\r\n\r\n      const meshTerms = Array.from(xmlDoc.querySelectorAll(\"MeshHeading > DescriptorName\"))\r\n        .map(term => term.textContent)\r\n        || \"No MeSH terms found\";\r\n\r\n      const title = xmlDoc.querySelector(\"ArticleTitle\")?.textContent || \"No title found\";\r\n\r\n      const abstract = xmlDoc.querySelector(\"AbstractText\")?.textContent || \"No abstract available\";\r\n      const authors = Array.from(xmlDoc.querySelectorAll(\"Author > LastName\"))\r\n        .map(author => author.textContent)\r\n        .join(\", \") || \"No authors found\";\r\n      const pubDate = xmlDoc.querySelector(\"PubDate > Year\")?.textContent || \"No publication date found\";\r\n\r\n      setData({ title: title, abstract: abstract, authors: authors, pubdt: pubDate, terms: [meshTerms.slice(0, 5)] })\r\n    }\r\n    catch (error) {\r\n      console.log('Failed to fetch article: ', error)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getAllInfo();\r\n  }, [])\r\n  return (\r\n    <div className='page_wrapper'>\r\n      <h1 className='article_title'>{data?.title}</h1>\r\n      <div className='categories_div'>{data?.terms?.map((category, i) => <p className='article_category' key={i}>{category}</p>)}</div>\r\n      <p>{data?.pubdt}</p>\r\n      <p className='article_text'>{data?.abstract}</p>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}