{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0434\\u043C\\u0438\\u043D\\\\Documents\\\\Svarchik\\\\\\u0422\\u041F\\u041F\\\\kurs\\\\portal\\\\frontend\\\\src\\\\pages\\\\SearchResultPage\\\\SearchResultPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { ArticleCard } from '../../components/ArticleCard/ArticleCard';\nimport './SearchResultPage.css';\nimport { ArticlesPagination } from '../../components/ArticlesPagination/ArticlesPagination';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function SearchResultPage() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n  const [results, setResults] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [searchPage, setSearchPage] = useState(JSON.parse(sessionStorage.getItem(\"searchPage\") || 1));\n  const resultsPerPage = 5;\n  useEffect(() => {\n    sessionStorage.setItem(\"searchPage\", JSON.stringify(searchPage));\n    if (query) fetchArticles(query);\n  }, [searchPage, query]);\n  async function fetchArticles(query) {\n    setLoading(true);\n    const baseURL = \"https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi\";\n    const retstart = (searchPage - 1) * resultsPerPage;\n    const url = `${baseURL}?db=pubmed&term=${encodeURIComponent(query)}[Mesh]+AND+HasAbstract[Filter]&retstart=${retstart}&retmax=${resultsPerPage}&retmode=json`;\n    try {\n      var _data$esearchresult;\n      const response = await fetch(url);\n      if (!response.ok) throw new Error(\"Failed to fetch data from PubMed.\");\n      const data = await response.json();\n      const idArray = data === null || data === void 0 ? void 0 : (_data$esearchresult = data.esearchresult) === null || _data$esearchresult === void 0 ? void 0 : _data$esearchresult.idlist;\n      if (idArray && idArray.length > 0) {\n        var _articlesData$result;\n        const articlesResponse = await fetch(`https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&id=${idArray.join(',')}&retmode=json`);\n        const articlesData = await articlesResponse.json();\n        const uids = articlesData === null || articlesData === void 0 ? void 0 : (_articlesData$result = articlesData.result) === null || _articlesData$result === void 0 ? void 0 : _articlesData$result.uids;\n        if (uids && uids.length > 0) {\n          const articles = uids.map(id => {\n            const {\n              title,\n              uid\n            } = articlesData.result[id];\n            const object = {\n              title,\n              uid\n            };\n            return object;\n          });\n          setResults(articles);\n        }\n      }\n    } catch (e) {} finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"search_result_text\",\n      children: [\"Search Results for \\\"\", query, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-success\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 56\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }, this), results.length > 0 && !isLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search_articles\",\n        children: results.map((item, index) => /*#__PURE__*/_jsxDEV(ArticleCard, {\n          article: item\n        }, \"search\" + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 84\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ArticlesPagination, {\n        page: searchPage,\n        setCurrentPage: setSearchPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), !results.length && !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no_results_text\",\n      children: \"No results found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 48\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchResultPage, \"J8o5x9167G1LWS7VULRC8PSILUM=\", false, function () {\n  return [useSearchParams];\n});\n_c = SearchResultPage;\nvar _c;\n$RefreshReg$(_c, \"SearchResultPage\");","map":{"version":3,"names":["React","useEffect","useState","useSearchParams","ArticleCard","ArticlesPagination","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchResultPage","_s","searchParams","query","get","results","setResults","isLoading","setLoading","searchPage","setSearchPage","JSON","parse","sessionStorage","getItem","resultsPerPage","setItem","stringify","fetchArticles","baseURL","retstart","url","encodeURIComponent","_data$esearchresult","response","fetch","ok","Error","data","json","idArray","esearchresult","idlist","length","_articlesData$result","articlesResponse","join","articlesData","uids","result","articles","map","id","title","uid","object","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","item","index","article","page","setCurrentPage","_c","$RefreshReg$"],"sources":["C:/Users/Админ/Documents/Svarchik/ТПП/kurs/portal/frontend/src/pages/SearchResultPage/SearchResultPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport { ArticleCard } from '../../components/ArticleCard/ArticleCard';\r\nimport './SearchResultPage.css'\r\nimport { ArticlesPagination } from '../../components/ArticlesPagination/ArticlesPagination';\r\n\r\nexport function SearchResultPage() {\r\n    const [searchParams] = useSearchParams()\r\n    const query = searchParams.get(\"query\");\r\n    const [results, setResults] = useState([]);\r\n    const [isLoading, setLoading] = useState(false)\r\n    const [searchPage, setSearchPage] = useState(JSON.parse(sessionStorage.getItem(\"searchPage\")||1));\r\n    const resultsPerPage = 5;\r\n\r\n    useEffect(()=>{\r\n        sessionStorage.setItem(\"searchPage\", JSON.stringify(searchPage))\r\n        if(query)\r\n            fetchArticles(query);\r\n    },[searchPage, query])\r\n\r\n    async function fetchArticles(query) {\r\n        setLoading(true);\r\n        const baseURL = \"https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi\";\r\n        const retstart = (searchPage-1) * resultsPerPage;\r\n        const url = `${baseURL}?db=pubmed&term=${encodeURIComponent(query)}[Mesh]+AND+HasAbstract[Filter]&retstart=${retstart}&retmax=${resultsPerPage}&retmode=json`\r\n        \r\n        try{\r\n            const response = await fetch(url);\r\n            \r\n            if(!response.ok) throw new Error(\"Failed to fetch data from PubMed.\")\r\n            const data = await response.json()\r\n            const idArray = data?.esearchresult?.idlist;\r\n            \r\n            if (idArray && idArray.length > 0) {\r\n                const articlesResponse = await fetch(`https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&id=${idArray.join(',')}&retmode=json`);\r\n                const articlesData = await articlesResponse.json();\r\n                const uids = articlesData?.result?.uids;\r\n\r\n                if(uids && uids.length>0){\r\n                    const articles = uids.map(id => {\r\n                        const { title, uid } = articlesData.result[id];\r\n                        const object = { title, uid };\r\n                        return object\r\n                    });\r\n                  \r\n                    setResults(articles)\r\n                }\r\n            }\r\n        }\r\n        catch(e){\r\n\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    } \r\n\r\n    return (\r\n        <div className='page_wrapper'>\r\n            <h1 className='search_result_text'>Search Results for \"{query}\"</h1>\r\n            {isLoading && <div className='loading_div'><div className=\"spinner-border text-success\" role=\"status\" >\r\n                <span className=\"visually-hidden\">Загрузка...</span></div></div>}\r\n            \r\n            {(results.length > 0 && !isLoading )&& \r\n                <>\r\n                    <div className='search_articles'>{results.map((item, index) => <ArticleCard key={\"search\"+index} article={item}/>)}</div>\r\n                    <ArticlesPagination page={searchPage} setCurrentPage={setSearchPage}/>\r\n                </> }\r\n            {(!results.length && !isLoading )&&<p className='no_results_text'>No results found</p>}\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}