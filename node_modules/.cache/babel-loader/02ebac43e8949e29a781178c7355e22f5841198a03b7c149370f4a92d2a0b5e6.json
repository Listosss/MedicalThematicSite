{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0434\\u043C\\u0438\\u043D\\\\Documents\\\\Svarchik\\\\\\u0422\\u041F\\u041F\\\\kurs\\\\portal\\\\frontend\\\\src\\\\pages\\\\ArticlePage\\\\ArticlePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './ArticlePage.css';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ArticlePage() {\n  _s();\n  const {\n    uid\n  } = useParams();\n  const [data, setData] = useState(null);\n  const getAllInfo = async () => {\n    try {\n      var _xmlDoc$querySelector, _xmlDoc$querySelector2, _xmlDoc$querySelector3, _xmlDoc$querySelector4, _xmlDoc$querySelector5;\n      const response = await fetch(`https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pubmed&id=${uid}&retmode=xml`);\n      const xmlText = await response.text();\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(xmlText, \"application/xml\");\n      const meshTerms = Array.from(xmlDoc.querySelectorAll(\"MeshHeading > DescriptorName\")).map(term => term.textContent) || \"No MeSH terms found\";\n      const title = ((_xmlDoc$querySelector = xmlDoc.querySelector(\"ArticleTitle\")) === null || _xmlDoc$querySelector === void 0 ? void 0 : _xmlDoc$querySelector.textContent) || \"No title found\";\n      const abstract = ((_xmlDoc$querySelector2 = xmlDoc.querySelector(\"AbstractText\")) === null || _xmlDoc$querySelector2 === void 0 ? void 0 : _xmlDoc$querySelector2.textContent) || \"No abstract available\";\n      const authors = Array.from(xmlDoc.querySelectorAll(\"Author > LastName\")).map(author => author.textContent).join(\", \") || \"No authors found\";\n      const pubDateYear = ((_xmlDoc$querySelector3 = xmlDoc.querySelector(\"PubDate > Year\")) === null || _xmlDoc$querySelector3 === void 0 ? void 0 : _xmlDoc$querySelector3.textContent) || \"No publication date found\";\n      const pubDateMonth = ((_xmlDoc$querySelector4 = xmlDoc.querySelector(\"PubDate > Month\")) === null || _xmlDoc$querySelector4 === void 0 ? void 0 : _xmlDoc$querySelector4.textContent) || \"No month found\";\n      const pubDateDay = ((_xmlDoc$querySelector5 = xmlDoc.querySelector(\"PubDate > Day\")) === null || _xmlDoc$querySelector5 === void 0 ? void 0 : _xmlDoc$querySelector5.textContent) || \"No day found\";\n      setData({\n        title: title,\n        abstract: abstract,\n        authors: authors,\n        pubdt: `${pubDateDay} ${pubDateMonth}, ${pubDateYear}`,\n        terms: [...meshTerms.slice(0, 5)]\n      });\n    } catch (error) {\n      console.log('Failed to fetch article: ', error);\n    }\n  };\n  useEffect(() => {\n    getAllInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"article_title\",\n      children: data === null || data === void 0 ? void 0 : data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categories_div_article\",\n      children: data !== null && data !== void 0 && data.terms ? data.terms.map((category, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"article_category\",\n        children: category\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 56\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 115\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data === null || data === void 0 ? void 0 : data.pubdt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data === null || data === void 0 ? void 0 : data.authors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"article_text\",\n      children: data === null || data === void 0 ? void 0 : data.abstract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ArticlePage, \"2S9BOs/bAHx3HCGd/AJttP69SIM=\", false, function () {\n  return [useParams];\n});\n_c = ArticlePage;\nvar _c;\n$RefreshReg$(_c, \"ArticlePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","ArticlePage","_s","uid","data","setData","getAllInfo","_xmlDoc$querySelector","_xmlDoc$querySelector2","_xmlDoc$querySelector3","_xmlDoc$querySelector4","_xmlDoc$querySelector5","response","fetch","xmlText","text","parser","DOMParser","xmlDoc","parseFromString","meshTerms","Array","from","querySelectorAll","map","term","textContent","title","querySelector","abstract","authors","author","join","pubDateYear","pubDateMonth","pubDateDay","pubdt","terms","slice","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","category","i","_c","$RefreshReg$"],"sources":["C:/Users/Админ/Documents/Svarchik/ТПП/kurs/portal/frontend/src/pages/ArticlePage/ArticlePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './ArticlePage.css'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport function ArticlePage() {\r\n  const { uid } = useParams();\r\n  const [data, setData] = useState(null)\r\n\r\n  const getAllInfo = async () => {\r\n    try {\r\n      const response = await fetch(`https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pubmed&id=${uid}&retmode=xml`)\r\n      const xmlText = await response.text();\r\n      const parser = new DOMParser();\r\n      const xmlDoc = parser.parseFromString(xmlText, \"application/xml\");\r\n\r\n      const meshTerms = Array.from(xmlDoc.querySelectorAll(\"MeshHeading > DescriptorName\"))\r\n        .map(term => term.textContent)\r\n        || \"No MeSH terms found\";\r\n\r\n      const title = xmlDoc.querySelector(\"ArticleTitle\")?.textContent || \"No title found\";\r\n\r\n      const abstract = xmlDoc.querySelector(\"AbstractText\")?.textContent || \"No abstract available\";\r\n      const authors = Array.from(xmlDoc.querySelectorAll(\"Author > LastName\"))\r\n        .map(author => author.textContent)\r\n        .join(\", \") || \"No authors found\";\r\n      const pubDateYear = xmlDoc.querySelector(\"PubDate > Year\")?.textContent || \"No publication date found\";\r\n      const pubDateMonth = xmlDoc.querySelector(\"PubDate > Month\")?.textContent || \"No month found\";\r\n      const pubDateDay = xmlDoc.querySelector(\"PubDate > Day\")?.textContent || \"No day found\";\r\n      setData({ title: title, abstract: abstract, authors: authors, pubdt: `${pubDateDay} ${pubDateMonth}, ${pubDateYear}`, terms: [...meshTerms.slice(0, 5)] })\r\n    }\r\n    catch (error) {\r\n      console.log('Failed to fetch article: ', error)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getAllInfo();\r\n  }, [])\r\n  return (\r\n    <div className='page_wrapper'>\r\n      <h1 className='article_title'>{data?.title}</h1>\r\n      <div className='categories_div_article'>\r\n        {data?.terms ? data.terms.map((category, i) =>(<p className='article_category' key={i}>{category}</p>)) : <p></p>}\r\n      </div>\r\n      <p>{data?.pubdt}</p>\r\n      <p>{data?.authors}</p>\r\n      <p className='article_text'>{data?.abstract}</p>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}